stages:
  - cleanup
  - deploy
  - nginx

before_script:
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

cleanup_server:
  stage: cleanup
  tags:
    - shell
  script:
    # Удаляем содержимое /opt/ на сервере
    - ssh root@$SERVER_HOST << 'EOF'
        set -e &&
        sudo rm -rf /opt/*
      EOF
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "push"'

deploy_application:
  stage: deploy
  tags:
    - shell
  script:
    # Копируем файлы на сервер и деплоим приложение
    - rsync -avz --exclude='*.log' --exclude='tmp/' -e "ssh -o StrictHostKeyChecking=no" ./ root@$SERVER_HOST:/opt/django_app/
    - ssh root@$SERVER_HOST << 'EOF'
        set -e &&
        sudo mkdir -p /opt/django_app_static/ &&
        sudo mkdir -p /opt/django_app_data/ &&
        cd /opt/django_app/ &&
        docker-compose down &&
        docker-compose pull &&
        docker-compose up -d --build
      EOF

configure_nginx:
  stage: nginx
  tags:
    - shell
  script:
    # Настраиваем Nginx
    - ssh root@$SERVER_HOST << 'EOF'
        set -e &&
        sudo apt install -y nginx &&
        sudo rm /etc/nginx/sites-enabled/default &&
        sudo ln -sf /opt/django_app/conf/django_app.nginx /etc/nginx/sites-available/ &&
        sudo ln -sf /etc/nginx/sites-available/django_app.nginx /etc/nginx/sites-enabled/ &&
        cat /etc/nginx/sites-enabled/django_app.nginx &&
        sudo nginx -t &&
        sudo systemctl restart nginx
      EOF
